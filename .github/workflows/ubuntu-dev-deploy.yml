name: ubuntu-dev deploy

on: push
  # workflow_run:
  #   workflows: ["ubuntu-dev build"]
  #   branches: ['add-build-packages-for-running-tests']
  #   types:
  #     - completed
  # push:
  #   tags:
  #     - '*'
    # branches:
    #   - 'main'

env:
  REGISTRY: ghcr.io
  REPO_OWNER: prb17
  REPO_NAME: ${{ github.repository }}
  IMAGE_NAME: ubuntu-dev
  IMAGE_TAG: latest

jobs:
  pre-deploy:
    uses: ./.github/workflows/ubuntu-dev-build.yml
  deploy:
    runs-on: ubuntu-latest
    needs: [pre-deploy]
    container:
      image: ghcr.io/prb17/image-builder:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Download Dockerfile context result for 'configure'
      uses: actions/download-artifact@v3
      with:
        name: docker_context
    - name: Deploy Image
      run: |
        echo "LABEL org.opencontainers.image.source https://github.com/${{ env.REPO_NAME }}" >> Dockerfile
        export DOCKER_BUILD_CONTEXT=`pwd` 
        export DOCKER_BUILD_IMAGE_NAME=${{ env.IMAGE_NAME }} 
        export DOCKER_BUILD_TAG=${{ env.IMAGE_TAG }}
        export DOCKER_PUBLISH_REGISTRY=${{ env.REGISTRY }}/${{ env.REPO_NAME }}
        entrypoint.sh

  # configure:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Configure the Dockerfile
  #     run: ./configure.py --config-image ${{ env.IMAGE_NAME }} --log-level debug

  #   - name: Upload Dockerfile context 
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: docker_context
  #       path: .

  # build:
  #   runs-on: ubuntu-latest
  #   needs: configure
  #   container:
  #     image: ghcr.io/prb17/image-builder:latest
  #     credentials:
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.PACKAGE_UPLOAD_TOKEN }}

  #   steps:
  #   - name: Download Dockerfile context result for 'configure'
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: docker_context

    # - name: Log in to the Container registry
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ${{ env.REGISTRY }}
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.PACKAGE_UPLOAD_TOKEN }}

  #   - name: Build and deploy the generated Dockerfile
  #     run: |
  #       echo "LABEL org.opencontainers.image.source https://github.com/${{ env.REPO_NAME }}" >> Dockerfile
  #       export DOCKER_BUILD_CONTEXT=`pwd` 
  #       export DOCKER_BUILD_IMAGE_NAME=${{ env.IMAGE_NAME }} 
  #       export DOCKER_BUILD_TAG=${{ env.IMAGE_TAG }}
  #       export DOCKER_PUBLISH_REGISTRY=${{ env.REGISTRY }}/${{ env.REPO_OWNER }}
  #       entrypoint.sh
